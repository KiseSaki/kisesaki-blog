# 开发环境配置
spring:
  # 数据库配置
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/blog}
    username: ${DB_USERNAME:kisesaki}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
  
  # JPA 配置
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: Asia/Shanghai
    open-in-view: false
  
  # Redis 配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      database: ${REDIS_DATABASE:0}
      password: ${REDIS_PASSWORD:}
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 2000ms
  
  # Kafka 配置
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    security:
      protocol: SASL_PLAINTEXT
    properties:
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_USERNAME:admin}" password="${KAFKA_PASSWORD:}";
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
    consumer:
      group-id: kisesaki-blog-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: com.kisesaki.blog
  
  # 邮件配置
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  
  # OAuth2 配置
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID:your-github-client-id}
            client-secret: ${GITHUB_CLIENT_SECRET:your-github-client-secret}
            scope: user:email,read:user
          gitee:
            client-id: ${GITEE_CLIENT_ID:your-gitee-client-id}
            client-secret: ${GITEE_CLIENT_SECRET:your-gitee-client-secret}
            authorization-grant-type: authorization_code
            redirect-uri: ${GITEE_REDIRECT_URI:http://localhost:3000/auth/gitee/callback}
            scope: user_info
        provider:
          gitee:
            authorization-uri: https://gitee.com/oauth/authorize
            token-uri: https://gitee.com/oauth/token
            user-info-uri: https://gitee.com/api/v5/user
            user-name-attribute: login

# 自定义配置
kisesaki:
  blog:
    # JWT 配置
    jwt:
      secret: ${JWT_SECRET:kisesaki-blog-jwt-secret-key-for-development-only}
      expiration: 86400000 # 24小时
      refresh-expiration: 604800000 # 7天
    
    # 文件上传配置
    upload:
      path: ${UPLOAD_PATH:./uploads}
      max-size: 10MB
      allowed-types: 
        - image/jpeg
        - image/png
        - image/gif
        - image/webp
    
    # 缓存配置
    cache:
      default-ttl: 3600 # 1小时
      post-ttl: 1800    # 30分钟
      category-ttl: 7200 # 2小时

# 日志配置
logging:
  level:
    com.kisesaki.blog: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  file:
    name: ./logs/kisesaki-blog-dev.log
