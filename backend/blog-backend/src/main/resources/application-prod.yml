# 生产环境配置
spring:
  # 数据库配置
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/blog_prod}
    username: ${DATABASE_USERNAME:kisesaki}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 10
      maximum-pool-size: 50
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 30000
      leak-detection-threshold: 60000
  
  # JPA 配置
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: Asia/Shanghai
    open-in-view: false
  
  # Redis 配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 50
          max-idle: 20
          min-idle: 10
          max-wait: 3000ms
  
  # Kafka 配置
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
    security:
      protocol: SASL_PLAINTEXT
    properties:
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_USERNAME:admin}" password="${KAFKA_PASSWORD:}";
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 5
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
    consumer:
      group-id: kisesaki-blog-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      max-poll-records: 500
      properties:
        spring.json.trusted.packages: com.kisesaki.blog
  
  # 邮件配置
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  
  # OAuth2 配置
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope: user:email,read:user
          gitee:
            client-id: ${GITEE_CLIENT_ID}
            client-secret: ${GITEE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: ${GITEE_REDIRECT_URI}
            scope: user_info
        provider:
          gitee:
            authorization-uri: https://gitee.com/oauth/authorize
            token-uri: https://gitee.com/oauth/token
            user-info-uri: https://gitee.com/api/v5/user
            user-name-attribute: login

# 服务器配置
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# 自定义配置
kisesaki:
  blog:
    # JWT 配置
    jwt:
      secret: ${JWT_SECRET}
      expiration: 86400000 # 24小时
      refresh-expiration: 604800000 # 7天
    
    # 文件上传配置
    upload:
      path: ${UPLOAD_PATH:/data/uploads}
      max-size: 10MB
      allowed-types: 
        - image/jpeg
        - image/png
        - image/gif
        - image/webp
    
    # 缓存配置
    cache:
      default-ttl: 3600 # 1小时
      post-ttl: 1800    # 30分钟
      category-ttl: 7200 # 2小时

# 日志配置
logging:
  level:
    root: WARN
    com.kisesaki.blog: INFO
    org.springframework.security: WARN
  file:
    name: /var/log/kisesaki-blog/app.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30

# Actuator 监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
